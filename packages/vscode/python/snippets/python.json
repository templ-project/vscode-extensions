{
  "0": {
    "prefix": "fn",
    "body": [
      "def ${1:function_name}(${2:parameters}):",
      "    \"\"\"${3:Description of the function}",
      "    ",
      "    Args:",
      "        ${4:parameter_name}: ${5:Description}",
      "    ",
      "    Returns:",
      "        ${6:Return description}",
      "    \"\"\"",
      "    ${7:pass}"
    ],
    "description": "Python function with docstring"
  },
  "1": {
    "prefix": "cl",
    "body": [
      "class ${1:ClassName}:",
      "    \"\"\"${2:Class description}",
      "    ",
      "    Attributes:",
      "        ${3:attribute_name}: ${4:Description}",
      "    \"\"\"",
      "    ",
      "    def __init__(self, ${5:parameters}):",
      "        \"\"\"Initialize ${1:ClassName}.",
      "        ",
      "        Args:",
      "            ${6:parameter_name}: ${7:Description}",
      "        \"\"\"",
      "        ${8:pass}"
    ],
    "description": "Python class with docstring"
  },
  "2": {
    "prefix": "cm",
    "body": [
      "def ${1:method_name}(self, ${2:parameters}):",
      "    \"\"\"${3:Method description}",
      "    ",
      "    Args:",
      "        ${4:parameter_name}: ${5:Description}",
      "    ",
      "    Returns:",
      "        ${6:Return description}",
      "    \"\"\"",
      "    ${7:pass}"
    ],
    "description": "Python class method with docstring"
  },
  "3": {
    "prefix": "if",
    "body": [
      "if ${1:condition}:",
      "    ${2:pass}"
    ],
    "description": "Python if statement"
  },
  "4": {
    "prefix": "ifel",
    "body": [
      "if ${1:condition}:",
      "    ${2:pass}",
      "else:",
      "    ${3:pass}"
    ],
    "description": "Python if-else statement"
  },
  "5": {
    "prefix": "for",
    "body": [
      "for ${1:item} in ${2:iterable}:",
      "    ${3:pass}"
    ],
    "description": "Python for loop"
  },
  "6": {
    "prefix": "whl",
    "body": [
      "while ${1:condition}:",
      "    ${2:pass}"
    ],
    "description": "Python while loop"
  },
  "7": {
    "prefix": "try",
    "body": [
      "try:",
      "    ${1:pass}",
      "except ${2:Exception} as ${3:e}:",
      "    ${4:pass}"
    ],
    "description": "Python try-except block"
  },
  "8": {
    "prefix": "im",
    "body": [
      "import ${1:module}"
    ],
    "description": "Python import statement"
  },
  "9": {
    "prefix": "fim",
    "body": [
      "from ${1:module} import ${2:name}"
    ],
    "description": "Python from import statement"
  },
  "10": {
    "prefix": "log",
    "body": [
      "print(${1:variable})"
    ],
    "description": "Python print statement"
  },
  "11": {
    "prefix": "debug",
    "body": [
      "print(f\"DEBUG: ${1:variable} = {${1:variable}}\")"
    ],
    "description": "Python debug print with f-string"
  },
  "12": {
    "prefix": "test",
    "body": [
      "def test_${1:function_name}():",
      "    \"\"\"Test ${2:description}.",
      "    \"\"\"",
      "    # Arrange",
      "    ${3:setup}",
      "    ",
      "    # Act",
      "    ${4:action}",
      "    ",
      "    # Assert",
      "    assert ${5:condition}"
    ],
    "description": "Python test function with AAA pattern"
  },
  "13": {
    "prefix": "main",
    "body": [
      "if __name__ == \"__main__\":",
      "    ${1:main()}"
    ],
    "description": "Python main guard"
  },
  "14": {
    "prefix": "todo",
    "body": [
      "# TODO: ${1:description}"
    ],
    "description": "Python TODO comment"
  }
}

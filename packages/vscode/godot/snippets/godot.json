{
  "0": {
    "prefix": "extends",
    "body": ["extends ${1:Node}$0"],
    "description": "Class inheritance"
  },
  "1": {
    "prefix": "class_name",
    "body": ["class_name ${1:ClassName}$0"],
    "description": "Define class name"
  },
  "2": {
    "prefix": "func",
    "body": ["func ${1:function_name}(${2:parameters}):\n\t${3:pass}$0"],
    "description": "Function definition"
  },
  "3": {
    "prefix": "_ready",
    "body": ["func _ready():\n\t${1:pass}$0"],
    "description": "Node _ready function"
  },
  "4": {
    "prefix": "_process",
    "body": ["func _process(delta):\n\t${1:pass}$0"],
    "description": "Node _process function"
  },
  "5": {
    "prefix": "_physics",
    "body": ["func _physics_process(delta):\n\t${1:pass}$0"],
    "description": "Node _physics_process function"
  },
  "6": {
    "prefix": "_input",
    "body": ["func _input(event):\n\t${1:pass}$0"],
    "description": "Node _input function"
  },
  "7": {
    "prefix": "_unhandled",
    "body": ["func _unhandled_input(event):\n\t${1:pass}$0"],
    "description": "Node _unhandled_input function"
  },
  "8": {
    "prefix": "signal",
    "body": ["signal ${1:signal_name}(${2:parameters})$0"],
    "description": "Signal definition"
  },
  "9": {
    "prefix": "onready",
    "body": ["onready var ${1:variable_name} = ${2:get_node(\"${3:NodePath}\")}$0"],
    "description": "Onready variable"
  },
  "10": {
    "prefix": "export",
    "body": ["export var ${1:variable_name}: ${2:int} = ${3:0}$0"],
    "description": "Export variable"
  },
  "11": {
    "prefix": "for",
    "body": ["for ${1:i} in ${2:range(10)}:\n\t${3:pass}$0"],
    "description": "For loop"
  },
  "12": {
    "prefix": "while",
    "body": ["while ${1:condition}:\n\t${2:pass}$0"],
    "description": "While loop"
  },
  "13": {
    "prefix": "if",
    "body": ["if ${1:condition}:\n\t${2:pass}$0"],
    "description": "If statement"
  },
  "14": {
    "prefix": "ifelse",
    "body": ["if ${1:condition}:\n\t${2:pass}\nelse:\n\t${3:pass}$0"],
    "description": "If-else statement"
  },
  "15": {
    "prefix": "match",
    "body": [
      "match ${1:value}:\n\t${2:pattern1}:\n\t\t${3:pass}\n\t${4:pattern2}:\n\t\t${5:pass}\n\t_:\n\t\t${6:pass}$0"
    ],
    "description": "Match statement"
  }
}
